---
title: 'Análisis de datos en R'
author: 'Juan Camilo Arboleda Rivera'
affiliation: Instituto de Biología, UdeA
format:
  revealjs:
    slide-number: true
    chalkboard: true
    footer: >
      [Análisis de datos](../index.qmd). Juan Camilo Arboleda Rivera, UdeA, 2024.
    theme: [default, ../slides.scss]
    width: 1920
    height: 1080
    code-line-numbers: false
    multiplex: true
---

# Instalación de software

## Instalando R en Linux

En una terminal de Linux ejecutar el siguiente comando:
```bash
sudo apt install r-base
```

## Instalando RStudio

1. Ir a la página de [RStudio](https://posit.co/download/rstudio-desktop/).
1. Descargar RStudio.
1. Instalar RStudio con el comando:

```{.bash}
sudo dpkg -i rstudio-2024.04.1-748-amd64.deb
```

![](https://posit.co/wp-content/uploads/2022/10/thumbnail-3.jpg){fig-align="center"}

# Introducción

## Texto guía {.nostretch}

[![](https://es.r4ds.hadley.nz/cover.png){height=900px fig-align="center"}](https://r4ds.hadley.nz/)

## Panorama general del trabajo en Ciencia de Datos

![](https://es.r4ds.hadley.nz/diagrams_w_text_as_path/es/data-science.svg)

## Datos Tidy vs Untidy

```{python}
import pandas as pd
from IPython.display import Markdown
df = pd.read_csv('../datos/untidy.tsv', sep='\t')
Markdown(df.to_markdown(index=False))
```

## Datos bien ordenados

Existen tres reglas interrelacionadas que hacen que un conjunto de datos sea
ordenado^[[R Para Ciencia de Datos](https://es.r4ds.hadley.nz/12-tidy.html)]:

1. Cada variable debe tener su propia columna.
2. Cada observación debe tener su propia fila.
3. Cada valor debe tener su propia celda.

![](https://es.r4ds.hadley.nz/diagrams_w_text_as_path/es/tidy-1.svg)

[Artículo de Hadley Wickam sobre datos
ordenados](https://vita.had.co.nz/papers/tidy-data.pdf)

## Los formatos TSV, CSV, ODS y... xlsx

::: {.incremental}
Formatos abiertos:

- **TSV:** Tab Separated Values (Valores separados por tabulación)
- **CSV:** Comma Separated Values (Valores separados por coma)
- **ODS**: OpenDocument Spreadsheet (Hoja de cálculo de OpenDocument)

Formato propietario:

- **xlsx:** Excel Spreadsheet XML
:::

## ¿Por qué usar formatos abiertos y software libre de análisis de datos?

![](https://i.ytimg.com/vi/2qmXYlRTXVA/maxresdefault.jpg){fig-align="center"}

[¿Se están cambiando los nombres de genes humanos por culpa de Excel?](https://www.eltiempo.com/tecnosfera/novedades-tecnologia/cambios-en-nombres-de-genes-humanos-por-culpa-de-excel-526586)

# R

## El Tidyverse

![](https://rviews.rstudio.com/post/2017-06-09-What-is-the-tidyverse_files/tidyverse1.png){fig-align="center"}

Para instalar el Tidyverse ejecutar el siguiente comando en R:
```R
# Install from CRAN
install.packages("tidyverse")
```

## Cargar paquetes en R y ejecutar código

Al instalar un paquete ya lo tendremos en nuestro computador, pero si
queremos usarlo tendremos que cargarlo con la función `library()`:

```{r}
#| echo: true
#| warning: true

library(tidyverse)
```

¿Qué creen que sea eso de `Conflicts`?

. . .

Ejecutar código es muy sencillo:
```{r, eval = TRUE}
#| echo: true
1 + 2
```

Para usar una función especificando el paquete de procedencia usamos el
formato `paquete::funcion()`.

# Importando datos

```{r}
#| echo: true
hojas <- read_tsv("../datos/hojas.tsv")
```

Observen que usamos la **ruta relativa**. ¿Por qué esto es importante?

# [Visualización de datos](https://es.r4ds.hadley.nz/03-visualize.html)

![Capas de
  ggplot2](https://metricsf20.classes.ryansafner.com/images/gglayers.png)

## Histogramas

```{r}
#| echo: true

ggplot(hojas) +
  geom_histogram(mapping = aes(x = longitud_hoja))
```

## Boxplot o diagrama de caja {.scrollable}

![](https://miro.medium.com/max/9000/1*2c21SkzJMf3frPXPAR_gZA.png)

```{r}
ggplot(hojas) +
  geom_boxplot(mapping = aes(x = longitud_hoja))
```

## Gráficos de dispersión

```{r}
#| echo: true

ggplot(data = hojas) +
  geom_point(mapping = aes(x = longitud_hoja, y = ancho_hoja, color = científico))
```

## Todavía más gráficos

[The R Graph Gallery](https://r-graph-gallery.com)
